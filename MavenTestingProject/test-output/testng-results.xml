<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="3" passed="1" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-12-22T18:49:36Z" name="Default suite" finished-at="2021-12-22T18:49:37Z" duration-ms="1388">
    <groups>
    </groups>
    <test started-at="2021-12-22T18:49:36Z" name="Default test" finished-at="2021-12-22T18:49:37Z" duration-ms="1388">
      <class name="TestDemo.ExtendReport">
        <test-method is-config="true" signature="startReport()[pri:0, instance:TestDemo.ExtendReport@7ceb3185]" started-at="2021-12-23T00:19:36Z" name="startReport" finished-at="2021-12-23T00:19:36Z" duration-ms="672" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method signature="skipTest()[pri:0, instance:TestDemo.ExtendReport@7ceb3185]" started-at="2021-12-23T00:19:36Z" name="skipTest" finished-at="2021-12-23T00:19:36Z" duration-ms="19" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at TestDemo.ExtendReport.skipTest(ExtendReport.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- skipTest -->
        <test-method is-config="true" signature="getResul(org.testng.ITestResult)[pri:0, instance:TestDemo.ExtendReport@7ceb3185]" started-at="2021-12-23T00:19:36Z" name="getResul" finished-at="2021-12-23T00:19:36Z" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=skipTest status=FAILURE method=ExtendReport.skipTest()[pri:0, instance:TestDemo.ExtendReport@7ceb3185] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResul -->
        <test-method signature="testCase1()[pri:0, instance:TestDemo.ExtendReport@7ceb3185]" started-at="2021-12-23T00:19:36Z" name="testCase1" finished-at="2021-12-23T00:19:36Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase1 -->
        <test-method is-config="true" signature="getResul(org.testng.ITestResult)[pri:0, instance:TestDemo.ExtendReport@7ceb3185]" started-at="2021-12-23T00:19:36Z" name="getResul" finished-at="2021-12-23T00:19:36Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCase1 status=SUCCESS method=ExtendReport.testCase1()[pri:0, instance:TestDemo.ExtendReport@7ceb3185] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResul -->
        <test-method signature="testCase2()[pri:0, instance:TestDemo.ExtendReport@7ceb3185]" started-at="2021-12-23T00:19:36Z" name="testCase2" finished-at="2021-12-23T00:19:36Z" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at TestDemo.ExtendReport.testCase2(ExtendReport.java:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase2 -->
        <test-method is-config="true" signature="getResul(org.testng.ITestResult)[pri:0, instance:TestDemo.ExtendReport@7ceb3185]" started-at="2021-12-23T00:19:36Z" name="getResul" finished-at="2021-12-23T00:19:36Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCase2 status=FAILURE method=ExtendReport.testCase2()[pri:0, instance:TestDemo.ExtendReport@7ceb3185] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResul -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:TestDemo.ExtendReport@7ceb3185]" started-at="2021-12-23T00:19:36Z" name="endReport" finished-at="2021-12-23T00:19:37Z" duration-ms="635" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- TestDemo.ExtendReport -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
